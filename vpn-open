#!/bin/bash

# variables
LOCAL_PROXY_PORT=61000
SOCKS5=false

# functions
usage() {
    echo "Open a VPN connection to the given host gateway url.

Usage: vpn-open [options...] <url>
    -u  The VPN username
    -p  The VPN password
    -s  The server hostname or IP to open a proxy tunnel to
    -P  The server port to connect & create a proxy tunnel to
    -L  The local proxy port (default: 61000)
    -e  Extra params required
    -5  Use a SOCKS5 proxy instead of a proxy port tunnel"
    exit 0;
}

while getopts ":u:p:s:P:L:e:5h" arg; do
echo $arg
    case $arg in
        u)
          USERNAME=${OPTARG}
          ;;
        p)
          PASSWORD=${OPTARG}
          ;;
        s)
          SERVER=${OPTARG}
          ;;
        P)
          SERVER_PORT=${OPTARG}
          ;;
        L)
          LOCAL_PROXY_PORT=${OPTARG}
          ;;
	e)
	  EXTRA_ARGS=${OPTARG}
	  ;;
        5)
          SOCKS5=true
          ;;
        *)
          usage
          ;;
    esac
done

shift $((OPTIND-1))
HOST=$1

if [[ -z ${HOST} ]]; then
    echo "Failure: no VPN gateway url provided"
    exit 1
fi

if [[ -z ${USERNAME} ]]; then
    echo "Failure: no VPN username provided"
    exit 1
fi

if [[ -z ${PASSWORD} ]]; then
    echo "Failure: no VPN password provided"
    exit 1
fi

if [[ ${SOCKS5} = false && -z ${SERVER} ]]; then
    echo "Failure: no server hostname/ip provided"
    exit 1
fi

if [[ ${SOCKS5} = false && -z ${SERVER_PORT} ]]; then
    echo "Failure: no server port provided"
    exit 1
fi

if [[ ${SOCKS5} = true ]]; then
    echo "Creating SOCKS5 proxy"
    bash -c "echo -n ${PASSWORD} | openconnect -u${USERNAME} --passwd-on-stdin --script-tun --script 'ocproxy -k 2 -D${LOCAL_PROXY_PORT}' ${EXTRA_ARGS} ${HOST}" &
else
    echo "Creating proxy port tunnel"
    bash -c "echo -n ${PASSWORD} | openconnect -u${USERNAME} --passwd-on-stdin --script-tun --script 'ocproxy -k 2 -L${LOCAL_PROXY_PORT}:${SERVER}:${SERVER_PORT}' ${EXTRA_ARGS} ${HOST}" &
fi

sleep 5
echo "Opened proxy port on :${LOCAL_PROXY_PORT}"
